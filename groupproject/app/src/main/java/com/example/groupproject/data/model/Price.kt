package com.example.groupproject.data.model

data class Price(
    val currency: String = "",
    val value: Double = 0.0
) {
    companion object {
        // Constants for currency conversion rates
        private val conversionRates = mapOf(
            "USD" to 1.0,
            "AED" to 3.6725,
            "AFN" to 73.0384,
            "ALL" to 95.8212,
            "AMD" to 404.4373,
            "ANG" to 1.7900,
            "AOA" to 836.9543,
            "ARS" to 823.5500,
            "AUD" to 1.5191,
            "AWG" to 1.7900,
            "AZN" to 1.7010,
            "BAM" to 1.8020,
            "BBD" to 2.0000,
            "BDT" to 109.6220,
            "BGN" to 1.8019,
            "BHD" to 0.3760,
            "BIF" to 2842.1630,
            "BMD" to 1.0000,
            "BND" to 1.3407,
            "BOB" to 6.8881,
            "BRL" to 4.9145,
            "BSD" to 1.0000,
            "BTN" to 83.1507,
            "BWP" to 13.6724,
            "BYN" to 3.2139,
            "BZD" to 2.0000,
            "CAD" to 1.3451,
            "CDF" to 2697.6011,
            "CHF" to 0.8640,
            "CLP" to 909.7508,
            "CNY" to 7.1797,
            "COP" to 3947.8721,
            "CRC" to 513.6648,
            "CUP" to 24.0000,
            "CVE" to 101.5947,
            "CZK" to 22.8141,
            "DJF" to 177.7210,
            "DKK" to 6.8721,
            "DOP" to 58.0983,
            "DZD" to 134.1409,
            "EGP" to 30.8749,
            "ERN" to 15.0000,
            "ETB" to 56.6534,
            "EUR" to 0.9214,
            "FJD" to 2.2355,
            "FKP" to 0.7868,
            "FOK" to 6.8721,
            "GBP" to 0.7868,
            "GEL" to 2.6728,
            "GGP" to 0.7868,
            "GHS" to 12.3766,
            "GIP" to 0.7868,
            "GMD" to 65.2031,
            "GNF" to 8585.4981,
            "GTQ" to 7.7815,
            "GYD" to 209.4386,
            "HKD" to 7.8151,
            "HNL" to 24.5388,
            "HRK" to 6.9421,
            "HTG" to 131.5963,
            "HUF" to 356.2168,
            "IDR" to 15791.9169,
            "ILS" to 3.6945,
            "IMP" to 0.7868,
            "INR" to 83.1508,
            "IQD" to 1309.2294,
            "IRR" to 42011.8812,
            "ISK" to 136.4842,
            "JEP" to 0.7868,
            "JMD" to 155.7075,
            "JOD" to 0.7090,
            "JPY" to 147.9227,
            "KES" to 162.6681,
            "KGS" to 89.2984,
            "KHR" to 4091.1663,
            "KID" to 1.5190,
            "KMF" to 453.2838,
            "KRW" to 1335.1328,
            "KWD" to 0.3072,
            "KYD" to 0.8333,
            "KZT" to 448.9154,
            "LAK" to 20506.2473,
            "LBP" to 15000.0000,
            "LKR" to 317.7956,
            "LRD" to 191.0113,
            "LSL" to 18.7931,
            "LYD" to 4.8202,
            "MAD" to 9.9691,
            "MDL" to 17.7325,
            "MGA" to 4531.3657,
            "MKD" to 56.7385,
            "MMK" to 2091.5716,
            "MNT" to 3425.0978,
            "MOP" to 8.0496,
            "MRU" to 39.9241,
            "MUR" to 45.0575,
            "MVR" to 15.4405,
            "MWK" to 1692.7493,
            "MXN" to 17.1659,
            "MYR" to 4.7303,
            "MZN" to 63.8879,
            "NAD" to 18.7931,
            "NGN" to 891.8649,
            "NIO" to 36.4257,
            "NOK" to 10.4192,
            "NPR" to 133.0412,
            "NZD" to 1.6393,
            "OMR" to 0.3845,
            "PAB" to 1.0000,
            "PEN" to 3.7656,
            "PGK" to 3.7151,
            "PHP" to 56.3752,
            "PKR" to 279.6584,
            "PLN" to 4.0275,
            "PYG" to 7291.8038,
            "QAR" to 3.6400,
            "RON" to 4.5788,
            "RSD" to 107.8703,
            "RUB" to 89.9079,
            "RWF" to 1310.2294,
            "SAR" to 3.7500,
            "SBD" to 8.4293,
            "SCR" to 14.1715,
            "SDG" to 509.0506,
            "SEK" to 10.4437,
            "SGD" to 1.3407,
            "SHP" to 0.7868,
            "SLE" to 22.4799,
            "SLL" to 22479.9107,
            "SOS" to 571.5432,
            "SRD" to 37.0077,
            "SSP" to 1104.3478,
            "STN" to 22.5735,
            "SYP" to 12833.0808,
            "SZL" to 18.7931,
            "THB" to 35.6471,
            "TJS" to 10.9262,
            "TMT" to 3.4997,
            "TND" to 3.1103,
            "TOP" to 2.3357,
            "TRY" to 30.3302,
            "TTD" to 6.7132,
            "TVD" to 1.5190,
            "TWD" to 31.2339,
            "TZS" to 2521.8064,
            "UAH" to 37.7654,
            "UGX" to 3808.5488,
            "UYU" to 38.7434,
            "UZS" to 12372.6858,
            "VES" to 36.2020,
            "VND" to 24571.6245,
            "VUV" to 120.0624,
            "WST" to 2.7338,
            "XAF" to 604.3784,
            "XCD" to 2.7000,
            "XDR" to 0.7526,
            "XOF" to 604.3784,
            "XPF" to 109.9488,
            "YER" to 248.8652,
            "ZAR" to 18.7932,
            "ZMW" to 26.8522,
            "ZWL" to 9678.2921
        )
    }

    fun convertTo(targetCurrency: String): Price {
        if (currency == targetCurrency) {
            // No need to convert if the target currency is the same
            return this
        }

        val thisRate = getConversionRate(currency)
        val targetRate = getConversionRate(targetCurrency)
        val convertedValue = (value/thisRate) * targetRate
        return Price(targetCurrency, convertedValue)
    }

    private fun getConversionRate(targetCurrency: String): Double {
        return conversionRates[targetCurrency] ?: throw IllegalArgumentException("Unknown currency: $targetCurrency")
    }
}